- name: Create folders
  become: True
  become_user: root
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  loop:
    - "{{ porter_service_directory }}"

- name: Integrations env
  set_fact:
    oauth_env:
      GITHUB_CLIENT_ID: "{{ github_oauth_id  }}"
      GITHUB_CLIENT_SECRET: "{{ github_oauth_secret }}"
    app_env:
      GITHUB_APP_CLIENT_ID: "{{ github_app_id }}"
      GITHUB_APP_CLIENT_SECRET: "{{ github_secret }}"
      GITHUB_APP_WEBHOOK_SECRET: "{{ webhook_secret }}"
      GITHUB_APP_NAME: "{{ github_app_name }}"
      GITHUB_APP_ID: "{{ github_app_id }}"
      GITHUB_APP_SECRET_PATH: "{{ github_app_private_key_location }}"

- name: Create download url
  set_fact:
    zip_file: "porter_{{ porter_run_version }}_{{ ansible_system }}_{{ ansible_machine }}.zip"

- name: "Download porter {{ porter_run_version }}"
  get_url:
    url: "{{ porter_url }}/{{ porter_run_version }}/{{ zip_file }}"
    dest: /tmp
  register: zip_file

- name: UNZIPPING the files
  unarchive:
    src: "{{ zip_file.dest }}"
    dest: /tmp/
    copy: no
  register: unzipped_file

- name: Copy files from foo to bar
  copy:
    remote_src: True
    src: /tmp/porter
    dest: /usr/local/bin
    owner: root
    group: "{{ porter_user }}"
    mode: 0510

- name: Create service
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  loop:
    - { src: porter-run.service.j2, dest: /etc/systemd/system/porter-run.service }
    - { src: env.conf.j2, dest: "{{ porter_service_directory }}/env.conf" }
  notify:
    - reload systemd
    - restart porter-run

- name: configure
  become: true
  become_user: '{{ porter_user }}'
  command: "porter config set-host {{ porter_run_addr }}:{{ porter_run_port }}"

- name: clean
  become: True
  become_user: root
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/porter
